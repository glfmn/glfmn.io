@import '../colors';
@import '../constants';
@import url('https://fonts.googleapis.com/css?family=Source+Code+Pro:400,400i,700&display=swap');

$box-color: $dark-bg2;
$box-border: 1px solid $box-color;
$link-color: $dark-yellow;
$text-element-color: $dark-gray;

.pane-container {
    position: relative;
    box-sizing: border-box;
}

.terminal-theme {
    font-size: 1rem;
    font-family: 'Source Code Pro', monospace;
    color: $dark-fg0;
    background-color: $dark-bg;

    *::selection {
        color: $light-fg0;
        background-color: $light-bg2;
    }

    h1, h2, h3, h4, h5, h6 {
        font-weight: bold;
        margin: 1em 0;
        margin-top: 2em;
        font-size: 1em;
        line-height: normal;

        &:first-child {
            margin-top: 0;
        }
    }

    h3, h3::selection {
        text-transform: uppercase;
        color: $dark-purple;
    }

    h4, h5, h6 {
        text-transform: capitalize;
    }

    h4 {
        color: $dark-blue;

        &::selection {
            color: $dark-blue;
        }
    }

    h5 {
        color: $dark-green;

        &::selection {
            color: $dark-green;
        }
    }

    h6 {
        color: $dark-blue;

        &::selection {
            color: $dark-blue;
        }
    }

    h5, h6 {
        font-weight: normal;
    }

    h3::before {
        content: '# ';
    }

    h4::before {
        content: '## ';
    }

    h5::before {
        content: '### ';
    }

    h6::before {
        content: '#### ';
    }

    em::before, em::after {
        content: '_';
        color: $dark-gray;
    }

    strong::before, strong::after {
        content: '*';
        color: $dark-gray;
    }

    p {
        margin: 0;

        & + p {
            text-indent: 1.15em;
        }
    }

    a {
        &::selection {
            color: $light-yellow;
            background-color: $light-bg1;
        }

        color: $link-color;
        cursor: pointer;
        border-bottom: 1px dashed;
        text-decoration: none;

        &:hover, &:focus {
            background-color: $link-color;
            color: $dark-bg0;
        }
    }

    ol {
        display: block;
        margin: 1em 0;
        padding: 0;

        list-style-type: none;
        counter-reset: ol;
        & > li::before {
            content: counter(ol)'.';
	          counter-increment: ol;

            color: $dark-gray;
            display: inline-block;
            width: 2.4em;
            text-align: right;
            margin-right: 1.2em;
        }
    }

    ul {
        padding: 0;
        display: block;
        margin: 1em 0;

        list-style-type: none;
        li::before {
            color: $text-element-color;
            display: inline-block;
            width: 2em;
            margin-right: 1em;
            content: '*';
            text-align: right;
        }

        p {
            margin: 0;
        }
    }

    blockquote {
        color: $dark-fg2;
        font-style: italic;
        margin: 1em 0;
        padding: 0;
    }

    :not(pre) > code {
        font-style: normal;
        color: $dark-fg1;
        background-color: $dark-bg0_s;

        &::before, &::after {
            color: $dark-gray;
            content: '`';
        }
    }

    pre {
        font-size: 1em;
        color: $dark-fg;
        background-color: $dark-bg0_s;
        padding: 1em 0;
        overflow-x: scroll;
    }
}

.path {
    color: $dark-bright-aqua;
    font-weight: 700;
    font-size: 1rem;
    font-family: 'Source Code Pro', monospace;
    margin: 0;
    padding: 0;
}

.box-container {
    text-align: center;
}


.box {
    display: inline-block;
    margin: 4em auto;
    padding: 2em;
    background-color: $dark-bg0;
    border: $box-border;
    text-align: left;

    &:hover, &:focus {
        border-color: $dark-fg1;
        .link-box-link-text  {
            color: $dark-bg0;
            background-color: $dark-yellow;

            &::after {
                color: $dark-yellow;
            }
        }
    }
}

a.box {
    color: inherit;
    border-bottom: $box-border;

    &:hover, &:focus {
        color: inherit;
        background-color: $dark-bg0;
    }
}

.link-box-link-text {
    display: inline-block;
    margin-top: 2em;

    position: relative;

    border-bottom: 1px dashed $dark-yellow;

    color: $dark-yellow;

    &::after {
        content: '->';
        position: absolute;
        right: -2em;
    }
}

.title-container {
    display: inline-block;
    min-width: 33%;
    max-width: 66%;
    max-width: minmax(66%, 20em);
    padding: 2em;
}

.title {
    padding: 0;
    margin: 0 !important;
    font-weight: 700;

    &::before {
        content: 'title: ';
        color: $dark-bright-green;
    }
}

.author {
    padding: 0;
    margin: 0;
    display: block;

    font-weight: 400;

    &::before {
        content: 'author: ';
        color: $dark-blue;
    }
}

.date {
    padding: 0;
    margin: 0;
    display: block;

    &::before {
        content: 'date: ';
        color: $dark-purple;
    }
}

.excerpt {
    display: block;
    padding-top: 1em;
}

$column-size: 1em;
$column-size-2: 2em;
$gutter-size: 4em;
$gutter-offset: 5em;

/// Line numbers (::after content) are absolutely positioned off the left edge
/// of the text area which depends on the size of the gutter; add the padding
/// of one column between the gutter and the text and the offset is 5ems.  This
/// is to allow elements that need the ::before content to still have content
/// appear directly before the element and still count towards the line count.

.line-box {
    display: block;
    margin: 0;
    @media screen and (min-width: $mobile-size) {
        padding-left: $gutter-size;
    }
    padding-right: $column-size;
    @media screen and (min-width: $large-size) {
        margin: 0 auto;
        max-width: 800px;
    }
}

.footer {
    z-index: 3;
    background-color: $dark-bg1;
    position: sticky;
    left: 0;
    right: 0;
    bottom: 0;
}

.line-heading {
    padding-left: $column-size;
    padding-top: 1em;
    padding-bottom: 1em;
    border-bottom: $box-border;
    border-left: $box-border;

    @media screen and (min-width: $large-size) {
        border-right: $box-border;
    }
}

.text-area {
    position: relative;
    border-left: $box-border;
    border-bottom: $box-border;

    @media screen and (min-width: $large-size) {
        border-right: $box-border;
    }

    padding-bottom: 2em;

    @media screen and (min-width: $mobile-size) {
        padding: $column-size-2 0;
        padding-left: $column-size;
        counter-reset: line-numbers;

        a::before {
            z-index: 2;
            content: '~';
            position: absolute;
            left: -$column-size-2;
            font-weight: bold;
        }
        a:hover::before, a:focus::before {
            color: $link-color;
        }
    
        blockquote {
            p::before {
                content: '';
            }
            &::before {
                content: '>';
                color: $dark-fg3;
                font-weight: bold;
                position: absolute;
                left: 0;
            }
        }
    
        /// Absolute position relative to the item itself into the gutter
        p, li, h1, h2, h3, h4, h5, h6 {
            position: relative;
            display: block;
    
            counter-increment: line-numbers;
            &::after {
                content: counter(line-numbers);
    
                color: $text-element-color;
                font-weight: normal;
                font-style: normal;
                display: inline-block;
    
                position: absolute;
                top: 0;
                left: -$gutter-offset;
    
                width: 3em;
                padding-right: $column-size;
                text-align: right;
            }
            &:hover::after {
                color: $dark-fg0;
            }
        }
    }
}
